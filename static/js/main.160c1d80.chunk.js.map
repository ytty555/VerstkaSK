{"version":3,"sources":["img/pair.svg","components/FooterMain/FooterMain.js","components/MainBlock/Page.js","components/MainBlock/PagePair.js","components/MainBlock/proglogic.js","components/MainBlock/PagesBlock.js","components/MainBlock/MainBlock.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FooterMain","react_default","a","createElement","className","Component","Page","_ref","position","pageState","onClickMakeup","onClickPhoto","onClickDelegated","el","pagePosition","pageElPhoto","pageBG","getElementsClassNames","pageColor","pageMakeUp","pageMakeup","pagePhoto","pageDelegated","pageClassName","pageId","onClick","PagePair","props","src","require","alt","MainBlock_Page","statePage","left","handleOnClickMakeup","handleOnClickPhoto","handleOnClickDelegated","right","commonPagesColorScheme","24","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","28","25","26","27","32","29","30","31","isColorPage","pageQuantity","pageNum","toTwo","num","String","numForPair","pairNumber","res","getPagesState","pagesQuantity","pairs","resObj","i","keyObj","numPair","currPair","Object","assign","PagesBlock","Fragment","elList","MainBlock_PagePair","key","pagesState","handleOnClickMakeUp","push","renderPagePairList","nameStorage","MainBlock","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initialStateFromStorage","localStorage","getItem","JSON","parse","setStateToStorage","setItem","stringify","state","getPagesQuantity","parseInt","handleNewPagesField","radio","document","getElementsByClassName","length","checked","id","setState","pagePairNumber","posLR","ev","pagePairNumStr","stateTmp","defineProperty","info","currState","pagesDelegated","pagesMakeUp","pagesPhoto","pair","page","currPage","getPageInfo","pQuantity","pMakeUp","pDelegated","MainBlock_PagesBlock","name","type","htmlFor","App","components_MainBlock_MainBlock","components_FooterMain_FooterMain","Boolean","window","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.160c1d80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pair.cfcc8909.svg\";","import React, { Component } from 'react';\n\nclass FooterMain extends Component {\n  render() {\n    return (\n      <footer className=\"footer-main\">\n        <p className=\"app-version\">Учет сверстанных полос. version 2.0.1.</p>\n      </footer>\n    );\n  }\n}\n\nexport default FooterMain;\n","import React from \"react\";\n\nfunction Page({\n  position,\n  pageState,\n  onClickMakeup,\n  onClickPhoto,\n  onClickDelegated\n}) {\n  const el = getElementsClassNames(position);\n  const pageColor = pageState.pageColor ? \" page_color\" : \"\";\n  const pageMakeUp = pageState.pageMakeup ? \" page_make-up\" : \"\";\n  const pagePhoto = pageState.pagePhoto ? \" page_photo\" : \"\";\n  const pageDelegated = pageState.pageDelegated ? \" page_delegated\" : \"\";\n  const pageClassName =\n    \"page\" +\n    el.pagePosition +\n    pageColor +\n    pagePhoto +\n    pageMakeUp +\n    pageDelegated;\n  const { pageId } = pageState;\n\n  return (\n    <div className={pageClassName}>\n      <div className={el.pageBG} />\n      <div className=\"page__el-color\" />\n      <div className=\"page__el-number\">{pageId}</div>\n      {/* controls */}\n      <button className=\"page__el-make-up\" onClick={onClickMakeup} />\n      <button className={el.pageElPhoto} onClick={onClickPhoto} />\n      <button className=\"page__el-delegated\" onClick={onClickDelegated} />\n    </div>\n  );\n}\n\nfunction getElementsClassNames(position) {\n  if (position === 0) {\n    // левая полоса\n    return {\n      pagePosition: \" page_pos_left\",\n      pageElPhoto: \"page__el-photo_left\",\n      pageBG: \"page__el-background_left\"\n    };\n  } else if (position === 1) {\n    // правая полоса\n    return {\n      pagePosition: \" page_pos_right\",\n      pageElPhoto: \"page__el-photo_right\",\n      pageBG: \"page__el-background_right\"\n    };\n  }\n}\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"./Page\";\n\nfunction PagePair(props) {\n  const left = 0;\n  const right = 1;\n\n  return (\n    <div className=\"page-pair\">\n      <img\n        className=\"page-pair-background\"\n        src={require(\"../../img/pair.svg\")}\n        alt=\"Изображение разворота полос\"\n      />\n      <Page\n        position={left}\n        pageState={props.statePage.left}\n        onClickMakeup={props.handleOnClickMakeup(\"left\")}\n        onClickPhoto={props.handleOnClickPhoto(\"left\")}\n        onClickDelegated={props.handleOnClickDelegated(\"left\")}\n      />\n      <Page\n        position={right}\n        pageState={props.statePage.right}\n        onClickMakeup={props.handleOnClickMakeup(\"right\")}\n        onClickPhoto={props.handleOnClickPhoto(\"right\")}\n        onClickDelegated={props.handleOnClickDelegated(\"right\")}\n      />\n    </div>\n  );\n}\n\nexport default PagePair;\n","const commonPagesColorScheme = {\n  \"24\": {\n    \"01\": true,\n    \"02\": true,\n    \"03\": true,\n    \"04\": true,\n    \"05\": false,\n    \"06\": false,\n    \"07\": false,\n    \"08\": false,\n    \"09\": true,\n    \"10\": true,\n    \"11\": true,\n    \"12\": true,\n    \"13\": true,\n    \"14\": true,\n    \"15\": true,\n    \"16\": true,\n    \"17\": false,\n    \"18\": false,\n    \"19\": false,\n    \"20\": false,\n    \"21\": true,\n    \"22\": true,\n    \"23\": true,\n    \"24\": true\n  },\n  \"28\": {\n    \"01\": true,\n    \"02\": true,\n    \"03\": true,\n    \"04\": true,\n    \"05\": false,\n    \"06\": false,\n    \"07\": false,\n    \"08\": false,\n    \"09\": false,\n    \"10\": false,\n    \"11\": true,\n    \"12\": true,\n    \"13\": true,\n    \"14\": true,\n    \"15\": true,\n    \"16\": true,\n    \"17\": true,\n    \"18\": true,\n    \"19\": false,\n    \"20\": false,\n    \"21\": false,\n    \"22\": false,\n    \"23\": false,\n    \"24\": false,\n    \"25\": true,\n    \"26\": true,\n    \"27\": true,\n    \"28\": true\n  },\n  \"32\": {\n    \"01\": true,\n    \"02\": true,\n    \"03\": true,\n    \"04\": true,\n    \"05\": false,\n    \"06\": false,\n    \"07\": false,\n    \"08\": false,\n    \"09\": false,\n    \"10\": false,\n    \"11\": false,\n    \"12\": false,\n    \"13\": true,\n    \"14\": true,\n    \"15\": true,\n    \"16\": true,\n    \"17\": true,\n    \"18\": true,\n    \"19\": true,\n    \"20\": true,\n    \"21\": false,\n    \"22\": false,\n    \"23\": false,\n    \"24\": false,\n    \"25\": false,\n    \"26\": false,\n    \"27\": false,\n    \"28\": false,\n    \"29\": true,\n    \"30\": true,\n    \"31\": true,\n    \"32\": true\n  }\n};\n\n// Проверяет цветная ли это полоса согласно цветовой раскладке commonPagesColorScheme\nexport const isColorPage = (pageQuantity, pageNum) =>\n  commonPagesColorScheme[pageQuantity][pageNum];\n\n// Переводит число в струку из двух символов\nexport const toTwo = num => (num < 10 ? \"0\" + String(num) : String(num));\n\n// Возвращает номера полос разворота в виде массива номеров полос (левая и правая)\n// Массив из номеров полос: левая полоса и правая\nexport const numForPair = (pageQuantity, pairNumber) => {\n  let res = [null, null];\n\n  if (pairNumber === 1) {\n    res[0] = toTwo(pageQuantity);\n    res[1] = toTwo(pairNumber);\n  } else {\n    res[0] = toTwo(pairNumber * 2 - 2);\n    res[1] = toTwo(pairNumber * 2 - 1);\n  }\n  return res;\n};\n\n// Возвращает сводную информацию по полосам из state\nexport const getPageInfo = (pagesQuantity, currState) => {\n  let pagesDelegated = 0;\n  let pagesMakeUp = 0;\n  let pagesPhoto = 0;\n  let res = {};\n\n  if (!pagesQuantity) {\n    res.pagesQuantity = 0;\n    res.pagesDelegated = 0;\n    res.pagesMakeUp = 0;\n    res.pagesPhoto = 0;\n    return res;\n  }\n\n  for (let pair in currState) {\n    if (pair === \"[object Object]\") break;\n    for (let page in currState[pair]) {\n      const currPage = currState[pair][page];\n      pagesDelegated += currPage.pageDelegated ? 1 : 0;\n      pagesMakeUp += currPage.pageMakeup ? 1 : 0;\n      pagesPhoto += currPage.pagePhoto ? 1 : 0;\n    }\n  }\n\n  res.pagesQuantity = pagesQuantity;\n  res.pagesDelegated = pagesDelegated;\n  res.pagesMakeUp = pagesMakeUp;\n  res.pagesPhoto = pagesPhoto;\n\n  return res;\n};\n\n// Первичное заполнение состояния\nexport const getPagesState = pagesQuantity => {\n  if (!pagesQuantity) {\n    return {};\n  }\n  const pairs = pagesQuantity / 2;\n  let resObj = {};\n  (() => {\n    for (let i = 1; i <= pairs; i++) {\n      const keyObj = toTwo(i);\n      const numPair = numForPair(pagesQuantity, i);\n      const currPair = {\n        left: {\n          pageId: numPair[0],\n          pageColor: isColorPage(pagesQuantity, numPair[0]),\n          pageMakeup: false,\n          pagePhoto: false,\n          pageDelegated: false\n        },\n        right: {\n          pageId: numPair[1],\n          pageColor: isColorPage(pagesQuantity, numPair[1]),\n          pageMakeup: false,\n          pagePhoto: false,\n          pageDelegated: false\n        }\n      };\n      resObj[keyObj] = currPair;\n    }\n  })();\n  return Object.assign({}, resObj);\n};\n","import React from \"react\";\nimport PagePair from \"./PagePair\";\nimport { toTwo } from \"./proglogic\";\n\nfunction PagesBlock(props) {\n  const renderPagePairList = pagesQuantity => {\n    let elList = [];\n    let el = null;\n    for (let i = 1; i <= pagesQuantity / 2; i++) {\n      el = (\n        <PagePair\n          key={toTwo(i)}\n          statePage={props.pagesState[toTwo(i)]}\n          handleOnClickMakeup={props.handleOnClickMakeUp(i)}\n          handleOnClickPhoto={props.handleOnClickPhoto(i)}\n          handleOnClickDelegated={props.handleOnClickDelegated(i)}\n        />\n      );\n      elList.push(el);\n    }\n\n    return elList;\n  };\n\n  let pBlock = pagesQuantity => {\n    if (pagesQuantity) {\n      // this.state = getPagesState(this.props.pagesQuantity);\n      return (\n        <React.Fragment>\n          <h1 className=\"visually-hidden\"> Раскладка полос </h1>\n          <div className=\"page-grid-container\">\n            {renderPagePairList(pagesQuantity)}\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <h1> Раскладка полос не сформирована </h1>\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <main className=\"main-block\">\n        <section className=\"page-section\">\n          {pBlock(props.pagesQuantity)}\n        </section>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default PagesBlock;\n","import React, { Component } from \"react\";\nimport PagesBlock from \"./PagesBlock\";\nimport { toTwo, getPageInfo, getPagesState } from \"./proglogic\";\n\nconst nameStorage = \"AllState\";\n\nclass MainBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialStateFromStorage(nameStorage)\n  }\n\n  initialStateFromStorage = nameStorage => {\n    if (localStorage.getItem(nameStorage) !== null) {\n      return JSON.parse(localStorage.getItem(nameStorage));\n    } else {\n      return {\n        pagesState: getPagesState(0),\n        pagesQuantity: 0,\n      };\n    }\n  }\n\n  setStateToStorage = nameStorage => {\n    localStorage.setItem(nameStorage, JSON.stringify(this.state));\n  }\n\n\n\n  render() {\n    const info = getPageInfo(this.state.pagesQuantity, this.state.pagesState);\n    const pQuantity = this.state.pagesQuantity;\n    const pMakeUp = info.pagesMakeUp;\n    const pDelegated = info.pagesDelegated;\n\n    return (\n      <React.Fragment>\n        <header className=\"header-main\">\n          <p className=\"header__info\">\n            Всего полос в номере: <span>{pQuantity}</span>\n          </p>\n          <p className=\"header__info\">\n            Сверстано полос: <span>{pMakeUp + pDelegated}</span>\n          </p>\n          <p className=\"header__info\">\n            Осталось сверстать:\n            <span>{pQuantity - (pMakeUp + pDelegated)}</span>\n          </p>\n        </header>\n        <PagesBlock\n          pagesQuantity={this.getPagesQuantity(this.state)}\n          pagesState={this.state.pagesState}\n          handleOnClickMakeUp={this.handleOnClickMakeUp}\n          handleOnClickPhoto={this.handleOnClickPhoto}\n          handleOnClickDelegated={this.handleOnClickDelegated}\n        />\n        {/* <PagesBlock pagesQuantity={28} /> */}\n        <section className=\"control-panel\">\n          <fieldset className=\"choose-pages-fieldset\">\n            <legend>Количество полос</legend>\n            <ul>\n              <li className=\"choose-pages\">\n                <input\n                  name=\"pages\"\n                  type=\"radio\"\n                  className=\"choose-pages__radio\"\n                  id=\"24\"\n                />\n                <label htmlFor=\"24\">24 полосы</label>\n              </li>\n              <li className=\"choose-pages\">\n                <input\n                  name=\"pages\"\n                  type=\"radio\"\n                  className=\"choose-pages__radio\"\n                  id=\"28\"\n                />\n                <label htmlFor=\"28\">28 полос</label>\n              </li>\n              <li className=\"choose-pages\">\n                <input\n                  name=\"pages\"\n                  type=\"radio\"\n                  className=\"choose-pages__radio\"\n                  id=\"32\"\n                />\n                <label htmlFor=\"32\">32 полосы</label>\n              </li>\n            </ul>\n            <button onClick={this.handleNewPagesField}>\n              Создать раскладку\n            </button>\n          </fieldset>\n        </section>\n      </React.Fragment>\n    );\n  }\n\n  getPagesQuantity = state => {\n    return parseInt(state.pagesQuantity);\n  };\n\n  handleNewPagesField = () => {\n    const radio = document.getElementsByClassName(\"choose-pages__radio\");\n    let res = 0;\n\n    for (let i = 0; i < radio.length; i++) {\n      if (radio[i].checked) {\n        res = parseInt(radio[i].id);\n      }\n    }\n    this.setState({\n      pagesState: getPagesState(res),\n      pagesQuantity: res\n    });\n\n    this.setStateToStorage(nameStorage);\n  };\n\n  handleOnClickMakeUp = pagePairNumber => posLR => ev => {\n    const pagePairNumStr = toTwo(pagePairNumber);\n    const state = this.state.pagesState[pagePairNumStr];\n    const stateTmp = Object.assign({}, state);\n    stateTmp[posLR].pageMakeup = !state[posLR].pageMakeup;\n    stateTmp[posLR].pageDelegated =\n      stateTmp[posLR].pageDelegated && stateTmp[posLR].pageMakeup\n        ? false\n        : stateTmp[posLR].pageDelegated;\n    stateTmp[posLR].pagePhoto = !stateTmp[posLR].pageMakeup\n      ? false\n      : stateTmp[posLR].pagePhoto;\n    this.setState({\n      [state]: stateTmp\n    });\n    this.setStateToStorage(nameStorage);\n  };\n\n  handleOnClickPhoto = pagePairNumber => posLR => ev => {\n    const pagePairNumStr = toTwo(pagePairNumber);\n    const state = this.state.pagesState[pagePairNumStr];\n    const stateTmp = Object.assign({}, state);\n    if (!stateTmp[posLR].pageMakeup) return;\n    stateTmp[posLR].pagePhoto = !state[posLR].pagePhoto;\n    this.setState({\n      [state]: stateTmp\n    });\n    this.setStateToStorage(nameStorage);\n  };\n\n  handleOnClickDelegated = pagePairNumber => posLR => ev => {\n    const pagePairNumStr = toTwo(pagePairNumber);\n    const state = this.state.pagesState[pagePairNumStr];\n    const stateTmp = Object.assign({}, state);\n    stateTmp[posLR].pageDelegated = !state[posLR].pageDelegated;\n    stateTmp[posLR].pageMakeup =\n      stateTmp[posLR].pageMakeup && stateTmp[posLR].pageDelegated\n        ? false\n        : stateTmp[posLR].pageMakeup;\n    stateTmp[posLR].pagePhoto = !stateTmp[posLR].pageMakeup\n      ? false\n      : stateTmp[posLR].pagePhoto;\n    this.setState({\n      [state]: stateTmp\n    });\n    this.setStateToStorage(nameStorage);\n  };\n}\n\nexport default MainBlock;\n","import React, {\n  Component\n} from 'react';\nimport FooterMain from './FooterMain/FooterMain';\nimport MainBlock from './MainBlock/MainBlock';\n\nclass App extends Component {\n  render() {\n    return ( <\n      div className = \"all-blocks\" >\n      <\n      MainBlock / >\n      <\n      FooterMain / >\n      <\n      /div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./css/style.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}